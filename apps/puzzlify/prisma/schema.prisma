// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider = "postgresql"
//   url = env("POSTGRES_PRISMA_URL") // uses connection pooling
//   directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
// }

model User {
  id                     String         @id @default(uuid())
  email                  String         @unique
  password               String
  hostedAdventures       Adventure[]    @relation("HostAdventures")
  participatedAdventures Adventure[]    @relation("ParticipantsAdventures")
  stageProgresses        UserProgress[]
}

model Adventure {
  id              String         @id @default(uuid())
  dateCreated     DateTime       @default(now())
  name            String
  startDate       DateTime
  stages          Stage[]        @relation("AdventureStages")
  hostId          String
  host            User           @relation("HostAdventures", fields: [hostId], references: [id])
  participants    User[]         @relation("ParticipantsAdventures")
  stageProgresses UserProgress[]
}

model Stage {
  id              String          @id @default(uuid())
  riddle          String
  answer          String
  hints           Hint[]          @relation("StageHints")
  adventureId     String
  adventure       Adventure       @relation("AdventureStages", fields: [adventureId], references: [id])
  stageProgresses UserProgress[]
  previousStages  StageRelation[] @relation("PreviousStages")
  nextStages      StageRelation[] @relation("NextStages")
}

model StageRelation {
  id          String @id @default(uuid())
  fromStageId String
  fromStage   Stage  @relation("NextStages", fields: [fromStageId], references: [id])
  toStageId   String
  toStage     Stage  @relation("PreviousStages", fields: [toStageId], references: [id])

  @@unique([fromStageId, toStageId])
}

model Hint {
  id      String @id @default(uuid())
  delay   Int
  hint    String
  stageId String
  stage   Stage  @relation("StageHints", fields: [stageId], references: [id])
}

model UserProgress {
  id             String    @id @default(uuid())
  userId         String
  adventureId    String
  stageId        String
  startTime      DateTime  @default(now())
  completionTime DateTime?

  user      User      @relation(fields: [userId], references: [id])
  adventure Adventure @relation(fields: [adventureId], references: [id])
  stage     Stage     @relation(fields: [stageId], references: [id])

  @@unique(name: "userProgressId", [userId, adventureId, stageId])
}
